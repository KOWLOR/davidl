<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DavidL design + développement</title>
  <subtitle>Développeur front-end. Je crée des sites internet qui fonctionnent à merveille sur n'importe quel appareil. Je suis un concepteur de sites web spécialisé HTML et CSS basé à Lille</subtitle>
  <id>http://davidl.fr/blog/</id>
  <link href="http://davidl.fr/blog/"/>
  <link href="http://davidl.fr/blog/feed.xml" rel="self"/>
  <updated>2014-12-21T00:00:00+01:00</updated>
  <author>
    <name>David Leuliette</name>
  </author>
  <entry>
    <title>Sketchnoting 1 an après</title>
    <link rel="alternate" href="http://davidl.fr/blog/conseils-sketchnoting.html"/>
    <id>http://davidl.fr/blog/conseils-sketchnoting.html</id>
    <published>2014-12-21T00:00:00+01:00</published>
    <updated>2014-12-21T16:21:37+01:00</updated>
    <author>
      <name>DavidL design + développement</name>
    </author>
    <content type="html">&lt;p&gt;Dans une autre vie j'ai suivi l'école des beaux arts pendant plusieures années. J'aimais particulièrement le dessin sur papier. Ensuite est arrivé ma passion pour les ordianteurs et mon &lt;a href="http://fc03.deviantart.net/fs22/f/2008/007/7/1/Necron_Warrior_by_DbyD.jpg"&gt;dernier dessin&lt;/a&gt; date de plus de 10 ans !&lt;/p&gt;

&lt;p&gt;J'ai remarqué que je passe beaucoups de temps
J'aime le dessin
Rousseau Clement
https://twitter.com/&lt;strong&gt;clement&lt;/strong&gt;_&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>J’ai testé les ateliers de Paris Web 2014</title>
    <link rel="alternate" href="http://davidl.fr/blog/paris-web-2014.html"/>
    <id>http://davidl.fr/blog/paris-web-2014.html</id>
    <published>2014-09-23T00:00:00+02:00</published>
    <updated>2014-12-21T14:17:56+01:00</updated>
    <author>
      <name>DavidL design + développement</name>
    </author>
    <content type="html">&lt;p&gt;Samedi, réveil matin 5h direction la capitale. Au programme ? une journée d’ateliers organisés par l’&lt;a href="http://www.paris-web.fr/"&gt;association Paris Web&lt;/a&gt;. Les 3 thématiques de cette année : Qualité, Accessibilité &amp;amp; respect des standards ouverts.&lt;/p&gt;

&lt;p&gt;Grâce à la magie d’internet un covoiturage est organisé, je retrouve d’autres Lillois passionnés de web &lt;a href="https://twitter.com/rbwebdev"&gt;@rbwebdev&lt;/a&gt;, &lt;a href="https://twitter.com/"&gt;@lellexindo&lt;/a&gt; et &lt;a href="https://twitter.com/kevinthenard"&gt;@kevinthenard&lt;/a&gt;.
Pour l’année prochaine n’hésitez pas à nous mentionner sur twitter il restait une place dans la voiture.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Sac de goodies offertà Paris Web" src="https://farm6.staticflickr.com/5604/15398845649_d839082ec4.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Les chats envahissent le monde réel&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="organisation"&gt;Organisation&lt;/h2&gt;

&lt;p&gt;Pour la 9 année consécutive le staff de Paris web est bien rodé, et ça se voit. Dès votre arrivée c’est direction le check-in pour récupérer votre sac de goodies, le programme de la journée, et le plus important &lt;strong&gt;le mot de passe wifi&lt;/strong&gt; !&lt;/p&gt;

&lt;p&gt;On prends un café, plus de 150 participants sont attendus. En attendant on choisi son programme de la journée. Que vous soyez designer, graphiste, développeur ou simplement curieux vous avez le choix, le spectre de thématiques est assez important. C’est très difficile de planifier sa journée car n’avez le temps que pour 4 ateliers dans la journée.&lt;/p&gt;

&lt;h2 id="mon-programme-de-dveloppeur-front-end"&gt;Mon programme de développeur front-end&lt;/h2&gt;

&lt;p&gt;La veille, j’avais préparé &lt;a href="http://www.paris-web.fr/2014/ateliers/"&gt;mon programme&lt;/a&gt; "clone de whatsapp" à base d’HTML5 et d’Angular.js. Problème : je voulais absolument assister à l’atelier de &lt;a href="https://twitter.com/nhoizey"&gt;@nhoizey&lt;/a&gt; sur la performance et le responsive web design. Quand je vous disais que c’est très compliqué de faire son programme de la journée. Au final j’ai choisi en temps réel mon programme en fonction de l’humeur du moment.&lt;/p&gt;

&lt;h3 id="un-jeu-accessible-avec-html5-javascript-et-aria"&gt;Un jeu accessible avec HTML5, JavaScript et ARIA.&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Avec par Sylvie Duchateau et Victor Brito&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Trop souvent négligée, l’accessibilité est cependant quelque chose de &lt;a href="https://www.gov.uk/"&gt;nécessaire pour certains sites&lt;/a&gt;. Sylvie nous a expliqué comment elle utilise le web au quotidien avec sa liseuse braille et un lecteur d’écran.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Sketchnote paris web 2014 technologie Aria" src="https://farm6.staticflickr.com/5611/15399410379_d142c49c29.jpg" /&gt;
&lt;img alt="croquis paris web 2014 accessibilité" src="https://farm6.staticflickr.com/5616/15400014087_db3b89418a.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;J’ai approfondi mes connaissances de la technologie ARIA -autre que &lt;code&gt;role="banner"&lt;/code&gt;, et j’ai 2 ou 3 idées pour rendre le &lt;a href="http://zurb.com/article/1337/foundation-now-helps-you-build-accessible"&gt;Framework Foundation encore plus accessible&lt;/a&gt;. Je suis convaincu que cette technologie peut apporter énormément de valeur aux utilisateurs et pas seulement aux déficients visuels.&lt;/p&gt;

&lt;p&gt;Quand on voit ce qu’est capable de faire Google Now, Siri et Cortana, je pense que contrôler une application web intégralement à la voix n’est pas de la science fiction.&lt;/p&gt;

&lt;h3 id="finissons-en-ensemble-avec-le-mythe-de-responsive-web-design-lent"&gt;Finissons-en ensemble avec le mythe de Responsive Web Design lent&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Avec Matthias Dugué et Nicolas Hoizey&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Pourquoi je voulais participer à cet atelier ? Parce que &lt;a href="https://twitter.com/nhoizey"&gt;@nhoizey&lt;/a&gt; c’est le meilleur #privateJoke. Plus sérieusement, si vous souhaitez faire de vrai interfaces web préparés pour l’avenir vous devez gagner votre indépendance vis à vis de la résolution d’écran. Pour cela : &lt;a href="http://vimeo.com/79204119"&gt;les mesures c’est en em&lt;/a&gt; ou rien.&lt;/p&gt;

&lt;p&gt;La participation est au coeur de cet atelier. En partant d’un &lt;a href="https://github.com/m4dz/prwd-workshop"&gt;thème responsive hébergé sur GitHub&lt;/a&gt;, le but est de proposer des solutions au travers de pull-request. En plus le projet est un site statique -comme le mien. Génial ! … Et puis j’ai suivi le workflow qui est à mon avis le gros point noir : le temps de &lt;code&gt;git clone&lt;/code&gt; le projet, &lt;code&gt;bundle install&lt;/code&gt; les gems ruby et &lt;code&gt;npm install le-reste-du-monde&lt;/code&gt;, vous avez déjà "perdu" pas mal de temps.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Ateliers paris web github et pull-request" src="https://farm4.staticflickr.com/3949/15399361878_585fb607e6.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution pour la prochaine fois&lt;/strong&gt; : Afficher une liste de pré-requis pour les ateliers. Toutes ces opérations peuvent être réalisées en amont, à la maison sur une bonne connexion. Un simple tableau blanc peut aussi faire l’affaire : positionné au check-in du matin, on affiche une petite liste des choses à télécharger en fonction des ateliers.&lt;/p&gt;

&lt;p&gt;Malgrés ces petits désagréments, j’ai quand même appris quelque chose : je suis déjà compétent car je mets déjà en place quelques &lt;a href="/blog/site-obese.html"&gt;bonnes pratiques pour la performance&lt;/a&gt; et cet atelier m’a permis de conforter mes idées : utiliser du SVG et optimiser ses images pour avoir un impact significatif sur le chargement d’un site.&lt;/p&gt;

&lt;p&gt;Actuellement je gère les images HD avec du JavaScript mais demain j’utiliserais la solution &lt;code&gt;srcset&lt;/code&gt; pour déléguer ce travail directement au navigateur. Pour en savoir plus je vous invite à visiter le site du &lt;a href="http://responsiveimages.org/"&gt;Responsive Image Community Group&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="construire-ensemble-un-enseignement-front-end"&gt;Construire ensemble un enseignement Front-end&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Avec Delphine Malassingne et Rémi Parmentier&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cet atelier essaye de répondre à la question suivante : Comment enseigner l’intégration pour que cela soit pertinent, pédagogique et pérenne. Nous sommes tous d’accord pour dire que dépiller la documentation HTML5 ou CSS3 en présentant toutes les balilse n’a &lt;em&gt;aucun intérêt&lt;/em&gt;. Alors comment peut-on faire ?&lt;/p&gt;

&lt;p&gt;Chacun est mis à contribution pour trouver une formule de création de fiche d’enseignement qui s’articule autour de 3 points :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Définir un problème&lt;/li&gt;
  &lt;li&gt;Trouver une solution&lt;/li&gt;
  &lt;li&gt;Appliquer la solution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt="Enseignement integration et developpement front-end" src="https://farm6.staticflickr.com/5607/15399354038_f2f5637a43.jpg" /&gt;
&lt;img alt="fiche d’enseignement par l’exemple" src="https://farm6.staticflickr.com/5597/15561789456_28ddb1165a.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;J’ai souri en voyant la consigne car je pense exactement la même chose. Le but caché de ces fiches se résume à une chose : &lt;a href="http://davidl.fr/cv.html"&gt;Apprendre à apprendre&lt;/a&gt;, car c’est la seule chose qui sera utile aux étudiants.&lt;/p&gt;

&lt;p&gt;Si cette initiative vous intéresse il existe un &lt;a href="https://github.com/hteumeuleu/enseigner"&gt;repo sur GitHub&lt;/a&gt;. Vous pouvez aussi vous renseignez sur le mouvement webmakers de Mozilla.&lt;/p&gt;

&lt;h3 id="un-peu-de-musique-programmation-dascenseur"&gt;Un peu de musique programmation d’ascenseur&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Avec Thomas Parisot&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;J’avais fait mon choix dès le début de la journée. Si Thomas est présent, je vais le voir sans aucune hésitation. Arrivé en fin de journée, j’ai réalisé que &lt;a href="https://oncletom.io/talks/"&gt;suivre ses présentations&lt;/a&gt; est beaucoup plus simple que de faire un de ses exercices : du JavaScript pur, directement dans un navigateur sans utiliser Sublime… 1h30 plus tard nous sommes sortis bien #brainF$ck mais content d’avoir "programmé des ascenseurs".&lt;/p&gt;

&lt;p&gt;&lt;img alt="Programmation JavaScript ascenseurs" src="https://farm4.staticflickr.com/3934/15404565540_7b3fa7315b.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Un peu de pub pour le FOSDEM en passant&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Si vous souhaitez essayer, l’exercice disponible en ligne sur &lt;a href="http://elevato.rs"&gt;elevato.rs&lt;/a&gt;. L’objectif est de jouer avec JavaScript dans le but de faire bouger des ascenseurs. Mais attention à ne pas envoyer ces derniers au mauvais endroit :D&lt;/p&gt;

&lt;h2 id="mes-conseils-pour-lanne-prochaine"&gt;Mes conseils pour l’année prochaine&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Prendre une rallonge / multi-prise. Avoir du jus et de l’internet c’est un peu le nerf de la guerre.&lt;/li&gt;
  &lt;li&gt;Se renseigner sur le contenu et essayer de récupérer les fichiers / la configuration nécessaire &lt;em&gt;avant&lt;/em&gt; le début de l’atelier.&lt;/li&gt;
  &lt;li&gt;Arriver tôt au ateliers qui vous intéressent. Avec @rbwebdev j’ai instauré la règle du "En avance et premier rang"… Surtout pour choisir une place en fonction des prises disponibles.&lt;/li&gt;
  &lt;li&gt;Me contacter sur twitter pour organiser un covoiturage :D&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Une journée intense où j’en ai appris un peu plus sur l’accessibilité, comment parler de mon métier, pour terminer avec du Vanilla JavaScript (Compliqué dès qu’on est habitué à CoffeeScript).&lt;/p&gt;

&lt;p&gt;Un grand merci à toute l’équipe &amp;amp; bravo aux orateurs, vous êtes formidables.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Coder du HTML plus rapidement grâce au templating</title>
    <link rel="alternate" href="http://davidl.fr/blog/template-ruby.html"/>
    <id>http://davidl.fr/blog/template-ruby.html</id>
    <published>2014-09-07T00:00:00+02:00</published>
    <updated>2014-12-11T20:06:43+01:00</updated>
    <author>
      <name>DavidL design + développement</name>
    </author>
    <content type="html">&lt;p&gt;Cela fait maintenant plus d'un an que j'ai abandonné l'univers php pour me consacrer à la galaxie ruby. En travaillant avec une architecture MVC, j'ai utilisé différents moteurs de templating comme smarty.
Ruby possède aussi ses propres moteurs comme erb, haml, … Mais mon préféré -et de loin, reste &lt;a href="http://slim-lang.com/"&gt;slim&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pourquoi ? La raison est simple : je suis 2 fois plus performant. Avec ce templating, il n'est plus nécessaire pour le balisage HTML d'utiliser &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; et &lt;code&gt;/&lt;/code&gt;. Résultat : le HTML est codé 2 fois plus rapidement (Même si des plugins comme emmet.io peuvent vous faciliter la vie). Votre code est 2 fois moins long et il est beaucoup plus rapide de scanner un fichier.&lt;/p&gt;

&lt;p&gt;Dans cet article je vais expliquer les astuces que j'ai apprises en lisant la documentation, pour vous éviter de parcourir inutilement stackoverflow pendant des heures afin de trouver la bonne pratique de codage.&lt;/p&gt;

&lt;h2 id="les-bases"&gt;Les bases&lt;/h2&gt;

&lt;p&gt;La phylosophie de slim est de &lt;em&gt;supprimer tous les caractère inutiles&lt;/em&gt;. Si l'on prends cet exemple &lt;a href="http://slim-lang.com/"&gt;extrait de la documentation&lt;/a&gt; on peut remarquer plusieurs choses :&lt;/p&gt;

&lt;pre class="highlight haml"&gt;&lt;code&gt;  doctype html
  html
    head
      title Slim Examples
      meta name="keywords" content="template language"
      meta name="author" content=author
      javascript:
        alert('Slim supports embedded javascript!')
    body
      h1 Markup examples
      &lt;span class="nf"&gt;#content&lt;/span&gt;
        p This example shows you how a basic Slim file looks like.
        &lt;span class="p"&gt;==&lt;/span&gt; yield
        &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;empty?&lt;/span&gt;
          table
            &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
              tr
                td.name = item.name
                td.price = item.price
        &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
          p
           | No items found.  Please add some inventory.
             Thank you!
      &lt;span class="nf"&gt;#footer&lt;/span&gt;
        Copyright © &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Pas de fermeture de balises&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;#content&lt;/code&gt; donnera &lt;code&gt;&amp;lt;div id="content"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;td.name&lt;/code&gt; qui se transformera en &lt;code&gt;&amp;lt;td class="name"&amp;gt;&amp;lt;/td&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;= link_to 'Mon site', 'http://davidl.fr'&lt;/code&gt; pour utiliser du ruby qui sera compilé en &lt;code&gt;&amp;lt;a href="http://davidl.fr"&amp;gt;Mon site&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;- if i.am == amazing&lt;/code&gt; permet de faire des tests ou des boucles&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="gestion-des-espaces"&gt;Gestion des espaces&lt;/h2&gt;

&lt;p&gt;Si vous avez suivi mon &lt;a href="http://davidl.fr/blog/"&gt;tunning de sublime Text&lt;/a&gt; vous savez que je supprime les espaces inutiles en fin de ligne à chaque sauvegarde. Cet avantage peut se transformer en inconvénient et voici comment gérer les espaces avec slim et vous éviter d'utiliser &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;‘&lt;/code&gt; Ajoute un espace en fin de ligne.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;|&lt;/code&gt; Permet d'ajouter du texte sans espace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ce qui donne dans un cas concret :&lt;/p&gt;

&lt;pre class="highlight haml"&gt;&lt;code&gt;    p
      'Voici un paragraphe avec
       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="s1"&gt;'un lien vers un site'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'http://guidecss.fr'&lt;/span&gt;

    p
      |Un autre paragraphe
      ', avec une virgule.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="optimiser-les-moteurs-de-recherche-avec-les-balises-schemaorg"&gt;Optimiser les moteurs de recherche avec les balises schema.org&lt;/h2&gt;

&lt;p&gt;Schema.org est un format de micro données qui permet aux moteurs de recherches et aux différents appareils de comprendre la structure des informations. Voici un exemple simple pour le balisage d'un fil d'arianne&lt;/p&gt;

&lt;pre class="highlight haml"&gt;&lt;code&gt;    ul class="breadcrumbs"
      li itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"
        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="s1"&gt;'/index.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;itemprop: &lt;/span&gt;&lt;span class="s1"&gt;'url'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
          span itemprop="title"
            |Accueil
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;itemscope=""&lt;/code&gt; sera interprété en &lt;code&gt;itemscope&lt;/code&gt;, c'est l'un des seuls cas où vous devez ajouter des caractères par rapport au HTML.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="les-attributs-personnaliss-data-"&gt;Les attributs personnalisés &lt;code&gt;data-*&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Tout comme les balise de microdonnées, pour ajouter des attribut personnalisés il faut simplement utiliser la notation suivante :&lt;/p&gt;

&lt;p&gt;slim&lt;/p&gt;

&lt;pre class="highlight haml"&gt;&lt;code&gt;    nav data-dropdown="js-sub-menu" Menu
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;HTML&lt;/p&gt;

&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;data-dropdown=&lt;/span&gt;&lt;span class="s"&gt;"js-sub-menu"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Menu &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cela se complique un peu si vous devez ajouter plusieurs attributs, mais la encore la notation est simplifiée si l'on connait la bonne syntaxe :&lt;/p&gt;

&lt;p&gt;slim&lt;/p&gt;

&lt;pre class="highlight haml"&gt;&lt;code&gt;    div data: {a: 1, b: 2} Foo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;HTML&lt;/p&gt;

&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-a=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;data-b=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Foo&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="crire-du-markdown"&gt;Écrire du markdown&lt;/h2&gt;

&lt;p&gt;Il est possible d'écrire directement du markdown en plein milieu de ses vues. C'est une technique que j'utilise souvent car ce format est pervasif et facilement convertissable.&lt;/p&gt;

&lt;pre class="highlight markdown"&gt;&lt;code&gt;    markdown:
      ## Écrire du markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="coloration-syntaxique"&gt;Coloration syntaxique&lt;/h3&gt;

&lt;p&gt;Il existe une multitude d'outils pour ajouter de la coloration syntaxique dans des pages web. Ma technique préférée conciste à utiliser du markdown et à préciser le langage souhaité :&lt;/p&gt;

&lt;p&gt;avec redcarpet :&lt;/p&gt;

&lt;pre class="highlight markdown"&gt;&lt;code&gt;    markdown:
    &lt;span class="p"&gt;```&lt;/span&gt;&lt;span class="nl"&gt; ruby&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_cool_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="p"&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;avec kramdown :&lt;/p&gt;

&lt;pre class="highlight markdown"&gt;&lt;code&gt;    markdown:
    &lt;span class="p"&gt;~~~&lt;/span&gt;&lt;span class="nl"&gt; ruby&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_cool_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="p"&gt;~~~&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Le principal inconvénient d'utiliser ce moteur de templating est le coût de formation nécessaire à son apprentissage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C'est tout&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;La lecture des erreurs est simplifiée car si votre indentation n'est pas parfaite la page ne sera pas compilée. Fini le &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; fantôme qui casse toute votre mise page.&lt;/p&gt;

&lt;p&gt;Slim est actuellement 10 fois plus rapide que haml.&lt;/p&gt;

&lt;p&gt;En supprimant les balises inutiles votre code est plus concis et se lit plus rapidement.&lt;/p&gt;

&lt;p&gt;Il est toujours possible d'utiliser du code HTML pour vous familiariser avec la syntaxe, que vous abandonerez très vite pour n'utiliser plus que du slim.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;EDIT :&lt;/p&gt;

&lt;p&gt;Si vous n'utilisez pas ruby il existe des plugins en JavaScript pour vous aider à trouver la lumière :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/cognitom/gulp-slim"&gt;gulp-slim&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/matsumos/grunt-slim"&gt;grunt-slim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Coder plus efficacement avec Sublime Text</title>
    <link rel="alternate" href="http://davidl.fr/blog/sublime-source-code.html"/>
    <id>http://davidl.fr/blog/sublime-source-code.html</id>
    <published>2014-08-24T00:00:00+02:00</published>
    <updated>2014-12-09T19:43:25+01:00</updated>
    <author>
      <name>DavidL design + développement</name>
    </author>
    <content type="html">&lt;p&gt;Si je me souviens bien, le premier logiciel logiciel que j'ai utilisé, pour "développer" un site internet, c'était Frontpage. Tout ceux de la génération pré-ADSL ont sûrement commencé ou connu cet éditeur.&lt;/p&gt;

&lt;p&gt;Depuis j'ai essayé énormément d'applications différentes pour coder, des éditeurs de texte ou des IDE, et la liste est longue :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Frontpage&lt;/li&gt;
  &lt;li&gt;Dreamweaver&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://notepad-plus-plus.org/fr/"&gt;Notepad++&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gedit&lt;/li&gt;
  &lt;li&gt;Vi&lt;/li&gt;
  &lt;li&gt;Eclipse&lt;/li&gt;
  &lt;li&gt;Zend-Studio&lt;/li&gt;
  &lt;li&gt;Aptana&lt;/li&gt;
  &lt;li&gt;Komodo&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et je pense que cette liste n'est pas complète. Cependant mon éditeur de prédilection reste &lt;a href="http://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;. Ce programme peut sembler minimaliste, mais il est très efficace si il est configuré correctement. Et c'est là sa grande force : une communauté active avec énorméments d'extentions disponibles.&lt;/p&gt;

&lt;p&gt;Dans cet article je vais vous expliquer comment ce logiciel m'aide chaque jour à coder plus rapidement.&lt;/p&gt;

&lt;h2 id="installer-le-gestionnaire-de-packet"&gt;Installer le gestionnaire de packet&lt;/h2&gt;

&lt;p&gt;La première chose à faire après une nouvelle installation est d'installer &lt;em&gt;le gestionnaire de packets&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Il suffit pour cela d'ouvrir la console &lt;code&gt;View&lt;/code&gt; &amp;gt; &lt;code&gt;Show Console&lt;/code&gt; et de copier le script disponible sur le &lt;a href="https://sublime.wbond.net/installation"&gt;site de gestion des packets pour Sublime Text&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C'est tout&lt;/strong&gt;. Une fois cette étape terminée vous êtes prêt à travailler.&lt;/p&gt;

&lt;p&gt;Cela vous amènera à personnaliser l'éditeur &lt;em&gt;en fonction de vos besoins&lt;/em&gt;. La courbe d'apprentissage et de maîtrise est donc meilleure, comparé à un énorme IDE qui fait tout mais qui vous demandera &lt;em&gt;plusieurs mois d'apprentissage&lt;/em&gt; pour maîtriser l'outil -pour vous rendre compte qu'il ne réponds pas toujours à vos besoins.&lt;/p&gt;

&lt;h2 id="personnaliser-sublime-text"&gt;Personnaliser Sublime Text&lt;/h2&gt;

&lt;p&gt;Pour installer une extention c'est très facile. Il vous manque la coloration syntaxique pour les fichier &lt;code&gt;.coffee&lt;/code&gt; ou &lt;code&gt;.sass&lt;/code&gt; ?
Utilisez simplement le raccourci &lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;P&lt;/code&gt; et tapez &lt;code&gt;install&lt;/code&gt;. Il ne vous reste ensuite plus qu'à faire votre recherche.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Packets Sublime Text front-end dev" src="https://lh4.googleusercontent.com/31cDqfLhm9BWGYEI2H7el1BgXi5axo2vuR0rjRyLsh0=w423-h239-no" /&gt;
&lt;em&gt;Voici la liste des packets que j'utilise&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Si je ne devais en choisir qu'une liste réduite cela serait sans hésiter :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://emmet.io/"&gt;emmet&lt;/a&gt; (anciennement zen-coding) pour coder plus rapidement.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/jisaacks/GitGutter"&gt;GitGutter&lt;/a&gt; pour visualiser vos diff git en temps réel.&lt;/li&gt;
  &lt;li&gt;Le theme &lt;a href="https://github.com/EleazarCrusader/nexus-theme"&gt;Nexus Dark UI&lt;/a&gt; pour une lecture confortable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="configuration-de-ninja"&gt;Configuration de ninja&lt;/h2&gt;

&lt;p&gt;Voici le fichier de préférence que j'utilise sur toutes mes machines. Sur Ubuntu j'ai du changer la police de base car le rendu n'est pas le même comparé à Mac OS X. Si vous souhaitez utiliser le même il suffit d'ouvrir les &lt;code&gt;Settings - user&lt;/code&gt; (&lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;,&lt;/code&gt;) et de modifier le fichier &lt;code&gt;Preferences.sublime-settings&lt;/code&gt;.&lt;/p&gt;

&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Theme&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;scheme&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"color_scheme"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Packages/Theme - Nexus/Nexus.tmTheme"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"theme"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Nexus.sublime-theme"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"show_full_path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"font_face"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Menlo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"font_size"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"highlight_line"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"hot_exit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Custom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;UI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Zen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;search&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"folder_exclude_patterns"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;".sql"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"*/sql/*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;".svn"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;".git"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;".hg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"CVS"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;".idea"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;".cache"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"tmp/cache/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"features"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"spec/"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"ignored_packages"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Vintage"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="s2"&gt;"open_files_in_new_window"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"remember_open_files"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"rulers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Coding&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;convention&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"tab_size"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"translate_tabs_to_spaces"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"trim_automatic_white_space"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"trim_trailing_white_space_on_save"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"default_encoding"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"detect_indentation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"ensure_newline_at_eof_on_save"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="dmarrer-sublime-text-depuis-un-terminal"&gt;Démarrer Sublime Text depuis un terminal&lt;/h2&gt;

&lt;p&gt;C'est l'une des killer feature diponible sur les systèmes possédant un vrai système de fichier : utiliser un &lt;code&gt;alias&lt;/code&gt; pour lancer directement Sublime Text.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Raccourci pour &lt;a href="https://gist.github.com/artero/1236170"&gt;Mac OS X&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Lancer sublime text depuis &lt;a href="https://coderwall.com/p/iuxapa"&gt;un terminal avec linux&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt="Raccourci terminal Sublime Text" src="https://lh4.googleusercontent.com/U6kbOYceOAWw8Ptr9AtVLBt-h6j6mH4jm2s2DjducmM=w449-h300-no" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;En moins d'une minute vous pouvez corriger une erreur. On fait le même test avec un IDE ?&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="productivit-accrue-au-clavier"&gt;Productivité accrue au clavier&lt;/h2&gt;

&lt;p&gt;Voici une liste des raccourcis que j'utilise quotidienement :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;t&lt;/code&gt; : Trouver un fichier.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;n&lt;/code&gt; : Nouveau fichier (notez qu'il est sauvegardé directment au même emplacement que le dernier fichier ouvert).&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;t&lt;/code&gt; : Réouvrir un fichier fermé (comme dans un navigateur web).&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;p&lt;/code&gt; : Parcourir les commandes disponibles (indent file, reorder, git blame, install package …).&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;d&lt;/code&gt; : Sélectionner plusieurs mots.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;d&lt;/code&gt; : Duppliquer la ligne en cours.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + ↑ : Écriture multiligne.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + ↑ : Déplacer la ligne.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;W&lt;/code&gt; : Enrobage intelligent (sélectionner un texte, raccourci, saisir le markup, enter).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt="wrap HTML tag" src="https://lh4.googleusercontent.com/0H2MnLt8ZRY8Py1-G2ogMVRdGEhXW8Ky3ovqA0EmEKo=w588-h300-no" /&gt;&lt;/p&gt;

&lt;p&gt;Vous voila convaincu pour utiliser Sublime Text pour votre prochain projet, même si ces conseils sont plus accès intégration et développement front-end.&lt;/p&gt;

&lt;p&gt;N'hésitez pas à me partager vos packets pour compléter cette liste.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>5 bonnes raisons pour commencer un projet avec Foundation</title>
    <link rel="alternate" href="http://davidl.fr/blog/foundation-love.html"/>
    <id>http://davidl.fr/blog/foundation-love.html</id>
    <published>2014-08-18T00:00:00+02:00</published>
    <updated>2014-10-19T17:19:54+02:00</updated>
    <author>
      <name>DavidL design + développement</name>
    </author>
    <content type="html">&lt;p&gt;Foundation est dans &lt;a href="https://github.com/trending?l=css&amp;amp;since=monthly"&gt;le top 10 des repos&lt;/a&gt; les plus étoilés sur GitHub. Depuis la sortie publique de la &lt;a href="http://foundation.zurb.com/learn/about.html"&gt;version 3 en 2011&lt;/a&gt;, il y a connu de petits changements. Mais depuis la version 4 c'est un des Framework responsive les plus stable que vous pouvez choisir pour votre prochaine application. Grâce à son système de grille simple, il est apprécié par les développeurs webs de tout horizons - back-end comme front-end, car vous pouvez facilement et rapidement contruire un site internet fonctionnel et responsive. N'importe quel développeur avec des connaissances de base en HTML et CSS peut commencer à utiliser Foundation.&lt;/p&gt;

&lt;h2 id="pourquoi-jaime-foundation-et-pourquoi-vous-devez-laimer-aussi"&gt;Pourquoi j'aime Foundation et pourquoi vous devez l'aimer aussi&lt;/h2&gt;

&lt;p&gt;Foundation offre des bases solides pour n'importe quel site, quelque soit la taille du projet. Il embarque &lt;a href="https://github.com/necolas/normalize.css"&gt;normalize.css&lt;/a&gt;, qui est indispensable pour avoir un contenu cohérent entre les différents navigateurs. Foundation est basé sur la priorité au mobile (aka mobile-first) ce qui permet une bonne mise en page, notamment au niveau de la typographie. Le &lt;code&gt;font-size&lt;/code&gt; des textes est calculé en fonction de la taille d'écran. Chaque élément contient un style de base, comme les formulaires qu'il est facile de styler rapidement si vous connaissez les bonnes variables du fichier &lt;code&gt;_settings.scss&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Foundation est incroyable" src="http://foundation.zurb.com/assets/img/support/goodies/wallpaper-3%281024x768%29.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;J'utilise Foundation car je gagne énormément de temps en corrigeant des problèmes historiques au web. Ce temps gagné me permet d'investir plus de valeur dans la construction de solutions évolutives et personnalisées.&lt;/p&gt;

&lt;p&gt;Aujourd'hui les sites internet doivent être modernes, soignés, responsive, et optimisé pour le mobile. Foundation nous aide à atteindre ce but avec un minimum d'effort. Voici 5 raisons pour lesquelles je pense qu'actuellement c'est le meilleur framework disponible.&lt;/p&gt;

&lt;h2 id="une-grille-css-simple"&gt;Une grille CSS simple&lt;/h2&gt;

&lt;p&gt;Foundation possède le meilleur système de grille responsive disponible. Construit avec une priorité au mobile il est très facile de faire évoluer sa mise en page sur les tablettes, pour terminer sur des écrans. D'expérience je conseille de diviser son écran en 12 colonnes (Car 3 x 4 = 12). Ce système permet de mettre en place presque n'importe quel type de design.&lt;/p&gt;

&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"small-6 medium-4 large-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="dveloppement-rapide"&gt;Développement rapide&lt;/h2&gt;

&lt;p&gt;Foundation embarque un nombre impressionnant de composants CSS et JavaScripts, réutilisables et commun à n'importe quel projet web. Pour commencer vous pouvez simplement utiliser le même HTML que celui présent dans la documentation. Si vous souhaitez plus de contrôle au niveau du style il est aussi très facile de personnaliser le framework et d'étendre ses capacités en faisant &lt;a href="/blog/grille-semantique.html"&gt;appel aux mixin Sass&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="compatibilit-des-navigateurs"&gt;Compatibilité des navigateurs&lt;/h2&gt;

&lt;p&gt;Foudadation est compatible avec tous les navigateurs web modernes. Bien sûr si vous devez mettre en place un site qui ne respecte pas les standards HTML5, il est toujours possible de surcharger -inutilement de plugins votre page avec &lt;a href="https://github.com/aFarkas/html5shiv"&gt;HTML5Shiv&lt;/a&gt; et &lt;a href="https://github.com/scottjehl/Respond"&gt;Respond.js&lt;/a&gt;. Cela vous aidera à supporter un moment les anciens navigateurs.&lt;/p&gt;

&lt;p&gt;Si votre employeur / client souhaite un site internet compatible avec internet explorer 7, il est toujours possible de lui expliquer que :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Il est plus productif, à long terme, de construire l'avenir plutôt que de corriger les erreurs du passé.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="customisation-et-volution"&gt;Customisation et évolution&lt;/h2&gt;

&lt;p&gt;Foundation offre ne nombreuses façon de personnaliser son style par défaut.&lt;/p&gt;

&lt;h3 id="intgrateur-css"&gt;Intégrateur CSS&lt;/h3&gt;

&lt;p&gt;Vous pouvez &lt;a href="http://foundation.zurb.com/develop/download.html"&gt;télécharger directement un fichier CSS&lt;/a&gt; personnalisé avec vos différentes couleurs et composants.
Cette méthode permet d'écraser les styles et le comportement par défaut du JavaScript. Le principal problème est que vous perdez les nombreuses corrections mineures de bugs.&lt;/p&gt;

&lt;h3 id="dveloppeur-front-end"&gt;Développeur front-end&lt;/h3&gt;

&lt;p&gt;Si vous maîtrisez l'utilisation de &lt;a href="http://bower.io/"&gt;bower&lt;/a&gt; avec &lt;a href="http://nodejs.org/"&gt;nodeJS&lt;/a&gt;, et que vous utilisez un préprocesseur comme Sass vous pourrez utiliser toute la puissance de ce framework. En modifiant le fichier &lt;code&gt;_settings.scss&lt;/code&gt; il est facile et rapide de personnaliser le design. Cette méthode permet de mettre à jour facilement le framework et ses dépendances dans votre fichier &lt;code&gt;bower.json&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="guru-de-foundation"&gt;Guru de Foundation&lt;/h3&gt;

&lt;p&gt;Vous connaissez déjà par coeur le framework, vous pouvez cloner le projet &lt;a href="https://github.com/flexbox/foundation-boilerplate"&gt;foundation-boilerplate&lt;/a&gt; pour directement exploiter les bonnes mixins et contruire rapidement votre prototype.&lt;/p&gt;

&lt;h2 id="open-source"&gt;Open Source&lt;/h2&gt;

&lt;p&gt;Foundation est un projet open source, hébergé sur GitHub. Il est publié sous la licence MIT. C'est une des meilleures raisons pour lesquelles j'utilise quotidiennement Foundation. Vous êtes libres de l'utiliser comme bon vous semble en le changeant complètement ou simplement pour expérimenter une nouvelle technologie. De plus vous n'aurez pas à lire d'obscures conditions d'utilisations et n'avez aucun risque à l'utiliser sur les projets de vos clients.&lt;/p&gt;

&lt;h2 id="vous-souhaitez-apprendre-foundation-"&gt;Vous souhaitez apprendre Foundation ?&lt;/h2&gt;

&lt;p&gt;La première étape conciste &lt;a href="http://foundation.zurb.com/docs/"&gt;à lire la documentation&lt;/a&gt;. Ensuite pour tester rapidement une mise en page vous pouvez &lt;a href="https://github.com/flexbox/foundation-boilerplate/archive/gh-pages.zip"&gt;télécharger un boilerplate&lt;/a&gt;. Pour finir je construit presque &lt;a href="http://davidl.fr/projects.html"&gt;tous mes projets&lt;/a&gt; avec une base plus ou moins important de composants issus du framework. N'hésitez pas à aller hacker mon code source.&lt;/p&gt;

&lt;p&gt;J'espère que vous avez trouvé cet article interessant et qu'il vous a convaincu d'essayer &lt;a href="http://foundation.zurb.com/"&gt;Foundation&lt;/a&gt; pour vos futurs projets.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Astuce raccourcis GitHub</title>
    <link rel="alternate" href="http://davidl.fr/blog/github-ninja.html"/>
    <id>http://davidl.fr/blog/github-ninja.html</id>
    <published>2014-08-06T00:00:00+02:00</published>
    <updated>2014-10-19T17:19:54+02:00</updated>
    <author>
      <name>DavidL design + développement</name>
    </author>
    <content type="html">&lt;p&gt;Si je ne devais choisir qu'un seul outil &lt;a href="http://davidl.fr/toolkit.html"&gt;dans tous ceux que j'utilise&lt;/a&gt;, je choisirais sans hésiter le terminal. Concernant le site web se serait &lt;a href="http://github.com"&gt;GitHub&lt;/a&gt;. Vu que je passe beaucoups de temps à utiliser ces solutions, autant essayer d'être efficace.
Créer / savoir les différents raccourcis vous fera gagner de précieuses secondes. Vous êtes plus productif, votre travail est plus efficace et vous libère du temps pour régler de vrais problèmes.&lt;/p&gt;

&lt;div&gt;
&lt;div class="medium-6 medium-centered columns"&gt;
&lt;img src="https://octodex.github.com/images/dojocat.jpg" alt="Github ninja octocat" /&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id="des-alias-git"&gt;Des alias git&lt;/h2&gt;

&lt;p&gt;À mon avis la première chose à faire, sur vous utilisez git, est de pimper votre fichier &lt;code&gt;.gitconfig&lt;/code&gt;.&lt;/p&gt;

&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;user&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Bruce&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Wayne&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;email&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;bruce@wayne.com&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;push&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;current&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;poule&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;pull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;--rebase&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;co&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;checkout&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;br&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;branch&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;today&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;--since=midnight&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;--author='Bruce&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Wayne'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;--oneline&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;color&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;ui&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;auto&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;git poule&lt;/strong&gt; - Récupérer la dernière version du projet.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git br&lt;/strong&gt; - Afficher la liste de vos branches.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git co&lt;/strong&gt; - Changer de branche.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git push&lt;/strong&gt; - Pousser vos modifications "dans le cloud" (dans mon cas la branche courrante)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git today&lt;/strong&gt; - Qu'est ce que j'ai fait aujourd'hui ?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cette liste est simple et peut être grandement améliorée mais c'est ce que j'utilise 80% du temps.&lt;/p&gt;

&lt;h2 id="raccourcis-claviers"&gt;Raccourcis claviers&lt;/h2&gt;

&lt;p&gt;Les logiciels traditionnels et les application web ne sont pas si différentes. Gardez cela à l'esprit et essayez d'utiliser les raccourcis aussi souvent que possible sur &lt;a href="http://github.com"&gt;GitHub&lt;/a&gt; pour aider à réduire le temps passé sur le site.&lt;/p&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/3PsVvjWy21Q?rel=0" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;Liste des raccourcis claviers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;g c&lt;/strong&gt; – Afficher le code du projet.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;g i&lt;/strong&gt; – Voir les issues.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;t&lt;/strong&gt; – Lors de l'affichage du code source, avoir le comportement d'un explorateur de fichier.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;c&lt;/strong&gt; – Ouvrir une nouvelle issue.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;r&lt;/strong&gt; – Répondre à une issue + &lt;em&gt;bonus&lt;/em&gt; Sélectionne le texte pour faire une citation.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;?&lt;/strong&gt; – Voir le menu d'aide avec les raccourcis.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si vous avez d'autres idées / astuces n'hésitez pas à me les envoyer !&lt;/p&gt;
</content>
  </entry>
</feed>
