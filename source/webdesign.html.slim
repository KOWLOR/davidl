---
title: Webdesign adaptatif
date: 2013-12-04
page_title: Comment concevoir un design adaptatif ?
---
.row
  .medium-2.hide-for-small.columns
    div data-magellan-expedition="fixed"
      dl class="sub-nav"
        dd Contenu
        dd class="divider"
        dd data-magellan-arrival="grid"
          = link_to 'La grille', '#grid'
        dd data-magellan-arrival="images"
          = link_to 'Images flexibles', '#images'
        dd data-magellan-arrival="mediaqueries"
          = link_to 'Media Queries', '#mediaqueries'
        dd data-magellan-arrival="enhencement"
          = link_to 'Améliorations', '#enhencement'
        dd data-magellan-arrival="future"
          = link_to 'Retour vers le furtur', '#future'

  .medium-10.small-12.columns

    p
      'Ce n'est un secret pour personne, le trafic de l'internet mobile fera mordre la poussière au traffic de bureau classique -plus tôt que vous le pensez. Aux États-Unis, il représente déjà 20% du trafic web global. En Asie et en Afrique, plus de la moitié de tout le trafic  provient du mobile. En plus de cela, il y a des milliers et des milliers d'appareils qui peuvent être utilisés pour accéder au web. Concevoir des sites adaptatifs qui fonctionnent correctement dans ce nouvel écosystème est un vrai nouveau défi. La question à se poser est de savoir comment nous pouvons relever ce défi.
    p
      'Le design adaptatif (aka responsive webdesign), défini par Ethan Marcotte, vous permet de construire un site fluide qui peut se rétrécir ou s'agrandir pour s'adapter à toute taille d'écran sur n'importe quel appareil.
    p
      'Avec une grille fluide, des images flexibles et des
      code media queries
      ', nous n'avons pas à concevoir, un site mobile dédié séparé. Nous avons seulement à en construire un, ce qui est un gain de temps. Nous pouvons prototyper rapidement et se déplacer rapidement dans le code de production.
    p
      'La conception adaptative nous permet de construire une solution évolutive, peu importe la taille, plutôt qu'un dispositif spécifique.


    p
      'Four-corners
      'The Perks of Designing Responsively



    p
      'Il y a de nombreux avantages au design adaptatif. Voici quelques-uns d'entre eux :
    ul
      li Préparé pour l'avenir
      li La conception de sites responsive vous permet d'être prêt pour les périphériques qui n'existent pas encore, parce que vous avez déjà assuré que votre produit sera adapté à toutes les résolutions.

    h2 Les trois principes du design adaptatif :

    p Quand Ethan Marcotte a inventé le terme Responsive Design, il a aussi introduit trois principes clef qui fonctionnent jusqu'à ce jour.

    h3 Une grille fluide
    p Une grille fluide, souple, qui n'est pas fixe. Elle doit être facilement adaptable à n'importe quelle taille de l'écran.

    h3 Médias flexible
    p Des médias qui ne sont pas fixés par une largeur en pixels. Ils peuvent être redimensionnées proportionnellement par le navigateur.

    h3 Media Queries
    Nous permet de sélectionner des styles spécifiques en fonction de certaines caractéristiques et classes périphériques.

    p Devenez fluide avec votre grille

    p
      'C'est la base pour vos créations adaptatives.
      'Le concept de grille apporte à l'esprit la rigidité, un système rigide et stable qui ne permet pas certaines mises en page de folie. Cependant, les systèmes de grille possèdent de nombreux d'avantages utiles.

    p
      'Pourtant, quand il s'agit de conception adaptative, nous ne parlons pas d'une vieille grille de 960px datant du siècle dernier. Nous avons besoin d'une grille fluide, qui est flexible et basé sur des pourcentages plutôt que des pixels. Les colonnes déterminent la largeur de la boite où le contenu est placé, alors que le contenu va déterminer la hauteur. Ce type de grille peut évoluer vers le haut ou vers le bas, en fonction de la taille de l'écran de l'appareil, où il est affiché.

    p
      'Comme Ethan Marcotte l'a écrit, des fondations flexibles sont essentielles pour que votre design responsive soit efficace.

    p Building_zurbian

    h2 Les bénéfices de la conception avec une grille

    p Build with the grid puts your design at a huge advantage :

    h3 Uniformity
    p A grid ensures consistency between webpages, reducing CSS coding errors. It also helps with reliable HTML placement.


    h3 Moins de code
    p With a grid system, you're not coding from scratch, which saves a lot of time. Another boon is that the grid makes iterating faster and easier.


    h3 Contrôle de la structure
    p A grid not only allows us to organize elements, but also offers control over the visual and structure of the page.

    p Grid Concepts

    p Here are a few concepts that you should be familiar with when it comes to a responsive grid.
    p Box Model
    p A box model is part of a browser. We recommend using box-sizing to change the type of box model a browser uses. This allows for backwards compatibility with older browsers.

    p Ordre des sources
    p Source ordering allows you to have the order of your mobile site and your markup be different from the grid on your page.

    p Grile sémantique
    p With a semantic grid, you can attach grid properties to elements in your markup that are semantically correct. A semantic grid requires a preprocessor, such as Sass or Less.

    p Nidification
    p A fluid grid allows for sub-grids within the existing grid — or nesting. This allows for more complex and visually interesting layouts.

    p Offsets
    p Offsets allow for additional space between columns in a row. Offsets are essential to ensure consistent legibility and that coveted breathing room.

    p Exemple de grille complèxe

    p Une image flexible pour les grouverner tous

    p Flexible images aren't locked in fixed pixels.

    p What we mean to say, of course, is flexible media, which includes images and videos, that can adapt depending on the screen size. This type of media doesn't depend on static pixels or fixed sizing.

    p Flexible images are responsive in HTML to the width and height of a screen, as well as every pixel density from low res to retina displays. To make this happen, images are set at their max-width of 100% so that they can can rest in the grid, adjusting accordingly to a variety of screen sizes.

    p However, this is easy to do partway and hard to do right. Flexible images are simplest with just CSS and scaling with the grid. Harder is loading the right resources for the right device. It's possible to use hidden-classes to swap larger images for smaller ones on mobile. But both images will still load, which can muck up the performance of a page. This is something that we still have to work on to perfect.

    p Desktops, Tablets and Smartphones, Oh My!

    p Adjust page elements to your preference with media queries.
    p Adapting_sketch
    p Mobile-first
    p More importantly, designing mobile first means we're not building sites starting with the desktop view and gracefully degrading down to smaller devices. Going from the desktop to the mobile, we may find that not all of our content will neatly shrink down and fit. With mobile first, we can progressively enhance from a smaller screen to larger ones.

    p Ie_rip_sketchA huge boon for a mobile-first approach is that it takes account that some devices and browsers, like IE7, don't fully support media queries.

    p Developing With Media Queries

    p With media queries you can make your page adapt in big or small ways to a variety of criteria. Media queries are what make it possible to have a great experience, no matter what the physical hardware is like.

    p Media Queries and the Navigation
    p One common use for media queries is to make changes to your navigation. Consider a simple horizontal nav like you might find on a marketing site: Products, Team, Experience, Contact, etc. On a larger display that might work fine, but a wide nav on a smartphone will not. With media queries that check against the display width of the device, we can have a horizontal nav become vertical, for example.

    p code

    p This is a very simple example, but the key component is the media query. We’re stating that this applies to screens (this is pretty standard and there are some other options but not widely used) and that we want the following styles to apply if the screen has a max width of 767px, basically anything less than 786px.

    p les Media Queries et la grille
    p Perhaps the most common use of media queries in responsive designs is to make changes to a typographic layout grid. Most grids are built to be desktop first — they start by creating rows and columns, sometimes that are a fixed pixel size and sometimes percentages. On small devices those columns become unreasonably slim, so the simplest solution is to abandon them on small devices and have the content simply flow down the page. A simple example might be:

    p code

    p Very simple, but very effective. Many frameworks that support responsive design do something like this by default, though some follow a mobile-first philosophy and use media queries to add the column sizes back in, rather than removing them.

    p Media Queries and Content Length
    p A final common use for media queries (and don’t get us wrong, there are a lot of uses for media queries) is to manage the readability of your content. Using media queries to increase or decrease font size, and thus increase or decrease the content length of a line, is a common practice that can really help users have a better experience with your site.

    p Try using media queries to change your header and paragraph sizes, line heights or even typeface. There are some interesting and handy things that can be done by experimenting in this area that we won’t get into right here.

    p Still Room for Improvement

    p We're just beginning to solve a lot of the problems with living in a multi-device world. That being said there is still plenty of room for improvement when it comes to responsive design.
    p Navigation
    p Traditionally, navigation has run horizontal to a page. But with responsive web design, navigation has to collapse vertically and not overpower the page. It also has to scale, so tons of links and nesting won't work either.

    p Images
    p Images have to be able to scale for different devices and still be large enough to handle big displays. But high-pixel images even if it's hidden can muck up a page's load since it will still load. But better solutions are on the horizon.

    p Tables
    p Making large data tables work in a responsive design can be a pain in the butt. They can't overflow and can break a responsive layout. That means you won't get to see all the data or be able to compare rows with a key column. Although, there are some solutions out there, like this one .



    p Retour vers le futur site insternet adaptatif

    p There are a few good tools out there when it comes to responsive design. Of course, we prefer Foundation (shameless plug). But no matter the tool you use or whether you create a responsive framework out of scratch, designing responsively is how we race toward the future.
    p After all, friends don't let friends design in 960px.

