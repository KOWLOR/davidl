---
title: Webdesign adaptatif
date: 2013-12-04
page_title: Comment concevoir un design adaptatif ?
---
.row
  .medium-2.hide-for-small.columns
    div data-magellan-expedition="fixed"
      dl class="sub-nav"
        dd Contenu
        dd class="divider"
        dd data-magellan-arrival="grid"
          = link_to 'La grille', '#grid'
        dd data-magellan-arrival="images"
          = link_to 'Images flexibles', '#images'
        dd data-magellan-arrival="mediaqueries"
          = link_to 'Media Queries', '#mediaqueries'
        dd data-magellan-arrival="enhancement"
          = link_to 'Améliorations', '#enhancement'
        dd data-magellan-arrival="future"
          = link_to 'Retour vers le furtur', '#future'

  .medium-10.small-12.columns
    p
      'Ce n'est un secret pour personne, la navigation mobile sur internet fera mordre la poussière au traffic de bureau classique -plus tôt que vous le pensez. Aux États-Unis, il représente déjà 20% du web global. En Asie et en Afrique, plus de la moitié de tout le traffic  provient du mobile. En plus de cela, il y a <del>des milliers et des milliers</del>
      ='link_to 'des millards', 'http://techcrunch.com/2012/10/16/mobile-milestone-the-number-of-smartphones-in-use-passed-1-billion-in-q3-says-strategy-analytics/'
      'd'appareils qui peuvent être utilisés pour accéder au web. Concevoir des sites adaptatifs qui fonctionnent correctement dans ce nouvel écosystème est un vrai nouveau défi. La question à se poser est de savoir comment nous pouvons relever ce défi.
    .row
      .medium-6.columns
        p
          'Le design adaptatif (aka responsive webdesign), défini par
          = link_to 'Ethan Marcotte', 'http://www.alistapart.com/articles/responsive-web-design/'
          ', explique comment construire un site fluide, qui peut se rétrécir ou s'agrandir, pour s'adapter à toute taille d'écran sur <strong>n'importe quel appareil</strong>.
        p
          'Avec une grille fluide, des images flexibles et des
          code media queries
          ', nous n'avons pas à concevoir, un site mobile dédié séparé. Nous avons seulement à en construire un, ce qui est un gain de temps. Nous pouvons prototyper rapidement et se déplacer rapidement dans le code de production.
        p
          'La conception adaptative nous permet de construire une solution évolutive, peu importe la taille, plutôt qu'un dispositif spécifique.
      .medium-6.columns
        = image_tag 'front/web-mobile-vs-desktop.png', alt: 'Accéder au web mobile'

    hr
    .row
      .medium-4.columns
        h2
          'Les avantages d'une conception adaptative
          br
          small Il y a de nombreux avantages au design adaptatif. Voici quelques-uns d'entre eux :

      .medium-7.columns
        h3
          'Prototypes et itérations rapides
          .fa.icon-loop-spin-turn-1
        p
          'En choississant un
          =link_to 'framework', 'http://foundation.zurb.com/'
          ', vous pouvez rapidement prototyper et itérer sur vos créations, réduisant de manière significative le développement de votre produit. Vous pouvez coder vos wireframes pour tester le comportement de vos créations sur un ordinateur de bureau, un téléphone ou une tablette.
        hr
        h3
          'Travailler avec de vrais appareils
          .fa.icon-gameboy
        p
          'Un <strong>framework responsive</strong> permet à votre design de se condenser sur les appareils plus petits et de s'étendre sur les plus grands. En travaillant avec
          =link_to 'un paradigme adaptatif', 'http://fr.wikipedia.org/wiki/Paradigme#En_informatique'
          ', vous n'avez pas à vous soucier du fonctionnement de vos créations sur tous les appareils.
        hr
        h3
          'Préparé pour l'avenir
          .fa.icon-clock
        p
          'La conception de sites responsive vous permet d'être prêt pour les périphériques <strong>qui n'existent pas encore</strong>, parce que vous avez déjà assuré que votre produit sera adapté à toutes les résolutions.
    hr

    h2 Les trois principes du design adaptatif

    p Quand Ethan Marcotte a inventé le terme responsive design, il a aussi introduit trois principes clef qui fonctionnent jusqu'à ce jour.

    .row
      .medium-4.columns
        h3 Une grille fluide
        p Une grille fluide, souple, qui n'est pas fixe. Elle doit être facilement adaptable à n'importe quelle taille d'écran.
      .medium-4.columns
        h3 Médias flexible
        p Des médias qui ne sont pas fixés par une largeur en pixels. Ils peuvent être redimensionnées proportionnellement par le navigateur.
      .medium-4.columns
        h3 Media Queries
        p Permet de sélectionner des styles spécifiques en fonction des caractéristiques des appareils.

    hr
    h2
      'Devenez fluide avec votre grille
      small C'est la base pour vos créations adaptatives.

    p
      '
      'Le concept de grille apporte à l'esprit la rigidité, un système rigide et stable qui ne permet pas certaines mises en page de folie. Cependant, les systèmes de grille possèdent de nombreux d'avantages utiles.

    p
      'Quand il s'agit de conception adaptative, nous ne parlons pas d'une vieille grille de <code>960px</code> datant du siècle dernier. Nous avons besoin d'une grille fluide, qui est flexible et <strong>basé sur des pourcentages</strong> plutôt que des pixels. Les colonnes déterminent la largeur de la boite où le contenu est placé, alors que le contenu va déterminer la hauteur. Ce type de grille peut évoluer vers le haut ou vers le bas, en fonction de la taille de l'écran de l'appareil, où il est affiché.

    p
      'Comme [Ethan Marcotte l'a écrit](http://www.abookapart.com/products/responsive-web-design), des fondations flexibles sont essentielles pour que votre design responsive soit efficace.

    hr

    h2 Les bénéfices de la conception avec une grille

    .row
      .medium-4.columns
        h3 Uniformité
        p Une grille assure la cohérence entre les pages Web, réduis les erreurs de codage CSS. Cela contribue également à un placement HTML fiable.

      .medium-4.columns
        h3 Moins de code
        p Avec un système de grille, vous ne réinventez pas la roue, ce qui fait gagner beaucoups de temps. Un autre avantage est que la grille rend les itérations rapides et plus facile.

      .medium-4.columns
        h3 Contrôle de la structure
        p Une grille permet d'organiser ses éléments, avec un contrôle sur la structure visuelle et sur la page.

    hr
    .row
      .medium-4.columns
        h2
          'Concept de grille
          br
          small Voici quelques concepts à connaitre pour travailler avec une grille adaptative.

      .medium-7.columns
        h3 Box Model
        p
          'Un "modèle de boîte" est un composant du navigateur. Je recommandes d'utiliser <code>box-sizing</code> pour
          =' link_to 'changer le type de modèle de boîte', 'http://www.paulirish.com/2012/box-sizing-border-box-ftw/'
          'utilisé par le navigateur. Cela permet une conserver une certaine retro-compatibilité.

        h3 Ordre des sources
        p L'agencement des sources permet d'avoir un affichage de site mobile différent du balisage utilisé par la grille.

        h3 Sémantique
        p Avec une grille sémantique, vous pouvez associer les propriétés de la grille à des éléments dans votre balisage pour être sémantiquement correct. Cela nécessite un préprocesseur, comme <code>Sass</code> ou <code>Less</code>.

        h3 Nidification
        p Une grille fluide permet la nidification -c'est à dire de s'inclure récursivement. Cela permet des mises en page plus complexes et visuellement intéressantes.

        h3 Ajustements
        p Les <code>Offsets</code> permettent d'avoir plus d'espace entre les colonnes d'une ligne. Ils sont indispensables pour assurer la cohérence en maximisant la lisibilité.

    hr
    .row
      .medium-4.columns
        h2 Exemple de grille complexe
      .medium-4.columns
        .template
          .row
            .small-12.columns
              span
          .row
            .small-3.columns
              span
            .small-6.columns
              span
            .small-3.columns
              span
          .row
            .small-6.columns
              span
            .small-2.columns
              span
            .small-4.columns
              span
          .row
            .small-4.columns
              span
            .small-4.columns
              span
            .small-4.columns
              span
          .row
            .small-6.columns
              span
            .small-3.columns
              span
            .small-3.columns
              span
          .row
            .small-12.columns
              span
        p.text-center Style mosaïque
      .medium-4.columns

    hr
    h2 Une image flexible pour les grouverner tous

    p La taille des images n'est pas bloqué en pixels fixe.

    p L'objectif est d'avoir des médias souples. Des images et des vidéos qui peuvent s'adapter en fonction de la taille d'écran. Ce type de support ne dépend pas de pixels statiques ou dimensions fixe.

    p Des images responsives s'adaptent au HTML pour la largeur et la hauteur d'écran, ainsi que la densité de chaque pixel de base. Pour ce faire, les images sont fixées à leur largeur max de 100% (<code>max-width: 100%;</code>) de sorte qu'elles puissent se redimensionner en fonction de la grille.

    p
      'Cependant, cela plus facile à dire qu'a faire. L'appel aux images est plus simple en CSS avec la mise à l'échelle de la grille. Le plus difficile est de
      =link_to 'charger les bonnes ressources pour le bon dispositif', 'https://coderwall.com/p/uip7xg?i=1&p=1&q=author%3Aflexbox&t[]=flexbox'
      '. Il est possible d'utiliser des classes pour cacher les images plus grandes pour les petits sur mobile. Mais <strong>les deux images seront toujours chargées</strong>, ce qui peut gâcher la performance d'une page. Je travaille quotidiennement sur ces problématiques.

    hr
    h2 TV, portables, tablettes, smartphones, Gameboy ?

    p Adjust page elements to your preference with media queries.
    p Adapting_sketch
    p Mobile-first
    p More importantly, designing mobile first means we're not building sites starting with the desktop view and gracefully degrading down to smaller devices. Going from the desktop to the mobile, we may find that not all of our content will neatly shrink down and fit. With mobile first, we can progressively enhance from a smaller screen to larger ones.

    p Ie_rip_sketchA huge boon for a mobile-first approach is that it takes account that some devices and browsers, like IE7, don't fully support media queries.

    p Developing With Media Queries

    p With media queries you can make your page adapt in big or small ways to a variety of criteria. Media queries are what make it possible to have a great experience, no matter what the physical hardware is like.

    p Media Queries and the Navigation
    p One common use for media queries is to make changes to your navigation. Consider a simple horizontal nav like you might find on a marketing site: Products, Team, Experience, Contact, etc. On a larger display that might work fine, but a wide nav on a smartphone will not. With media queries that check against the display width of the device, we can have a horizontal nav become vertical, for example.

    p code

    p This is a very simple example, but the key component is the media query. We’re stating that this applies to screens (this is pretty standard and there are some other options but not widely used) and that we want the following styles to apply if the screen has a max width of 767px, basically anything less than 786px.

    p les Media Queries et la grille
    p Perhaps the most common use of media queries in responsive designs is to make changes to a typographic layout grid. Most grids are built to be desktop first — they start by creating rows and columns, sometimes that are a fixed pixel size and sometimes percentages. On small devices those columns become unreasonably slim, so the simplest solution is to abandon them on small devices and have the content simply flow down the page. A simple example might be:

    p code

    p Very simple, but very effective. Many frameworks that support responsive design do something like this by default, though some follow a mobile-first philosophy and use media queries to add the column sizes back in, rather than removing them.

    p Media Queries and Content Length
    p A final common use for media queries (and don’t get us wrong, there are a lot of uses for media queries) is to manage the readability of your content. Using media queries to increase or decrease font size, and thus increase or decrease the content length of a line, is a common practice that can really help users have a better experience with your site.

    p Try using media queries to change your header and paragraph sizes, line heights or even typeface. There are some interesting and handy things that can be done by experimenting in this area that we won’t get into right here.

    hr
    .row
      .medium-4.columns
        h2
          'Les améliorations possibles
          br
          small Les techniques commencent à se standardiser pour règler les problèmes du monde multi-écran. Cela étant dit, il y a encore beaucoup de place pour l'amélioration en ce qui concerne la conception adaptative.

      .medium-7.columns
        h3 Navigation
        p Traditionally, navigation has run horizontal to a page. But with responsive web design, navigation has to collapse vertically and not overpower the page. It also has to scale, so tons of links and nesting won't work either.

        h3 Images
        p Images have to be able to scale for different devices and still be large enough to handle big displays. But high-pixel images even if it's hidden can muck up a page's load since it will still load. But better solutions are on the horizon.

        h3 Tableaux
        p Making large data tables work in a responsive design can be a pain in the butt. They can't overflow and can break a responsive layout. That means you won't get to see all the data or be able to compare rows with a key column. Although, there are some solutions out there, like this one .



    p Retour vers le futur site insternet adaptatif

    p There are a few good tools out there when it comes to responsive design. Of course, we prefer Foundation (shameless plug). But no matter the tool you use or whether you create a responsive framework out of scratch, designing responsively is how we race toward the future.
    p After all, friends don't let friends design in 960px.

